(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{636:function(p,v,_){"use strict";_.r(v);var t=_(2),e=Object(t.a)({},(function(){var p=this,v=p._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":p.$parent.slotKey}},[v("Boxx"),p._v(" "),v("p",[v("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/05/3ebfcc5647de17814cf65efd4134996d.jpg",alt:"全新高并发Reactor服务器全栈开发实战 学习 React 就够啦"}})]),p._v(" "),v("h3",{attrs:{id:"课程介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[p._v("#")]),p._v(" 课程介绍")]),p._v(" "),v("p",[p._v("课程全面覆盖高并发服务器开发的核心技术，从Reactor模型的架构设计，到高性能HTTP服务的实现，再到多线程优化和代码重构。无论你是希望掌握高并发技术的进阶开发者，还是正在寻找实战经验的初学者，这门课程都将为你提供系统化的学习路径。")]),p._v(" "),v("p",[p._v("1. 项目基础：从项目需求分析到多反应堆模型设计，深刻理解高并发服务器的架构理念。")]),p._v(" "),v("p",[p._v("2. 网络核心：详细讲解HTTP协议的数据格式、请求解析与响应机制，全面覆盖TCP/IP通信中的关键点。")]),p._v(" "),v("p",[p._v("3. 多线程优化：深入剖析线程池和多线程任务处理，提升服务器的并发能力与稳定性。")]),p._v(" "),v("p",[p._v("4. 模块化开发：通过Channel、Dispatcher、EventLoop等模块的实现，掌握服务器开发的模块化设计方法。")]),p._v(" "),v("p",[p._v("5. 代码重构：以高效的C++代码重构为实践，优化关键模块，提升代码的可维护性和性能。")]),p._v(" "),v("h3",{attrs:{id:"课程目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[p._v("#")]),p._v(" 课程目录")]),p._v(" "),v("p",[p._v("(1)\\视频")]),p._v(" "),v("p",[p._v("├─(1) 001. 项目概述以及要求.mp4")]),p._v(" "),v("p",[p._v("├─(2) 002. 项目效果展示.mp4")]),p._v(" "),v("p",[p._v("├─(3) 003. 关于项目业务层的说明.mp4")]),p._v(" "),v("p",[p._v("├─(4) 004. 多反应堆模型结构概述.mp4")]),p._v(" "),v("p",[p._v("├─(5) 005. 在VS中创建基于Linux的项目.mp4")]),p._v(" "),v("p",[p._v("├─(6) 006. 初始化服务器端用于监听的套接字.mp4")]),p._v(" "),v("p",[p._v("├─(7) 007. epoll 工作模型的雏形.mp4")]),p._v(" "),v("p",[p._v("├─(8) 008. 和客户端建立新连接.mp4")]),p._v(" "),v("p",[p._v("├─(9) 009. http的get请求数据块的格式.mp4")]),p._v(" "),v("p",[p._v("├─(10) 010. http的post请求数据块的格式.mp4")]),p._v(" "),v("p",[p._v("├─(11) 011. http响应消息的数据格式.mp4")]),p._v(" "),v("p",[p._v("├─(12) 012. http的状态码和如何指定content-type.mp4")]),p._v(" "),v("p",[p._v("├─(13) 013. 接收客户端的http请求消息.mp4")]),p._v(" "),v("p",[p._v("├─(14) 014. sscanf 函数的使用.mp4")]),p._v(" "),v("p",[p._v("├─(15) 015. 解析请求行.mp4")]),p._v(" "),v("p",[p._v("├─(16) 016. 发送文件的两种方式.mp4")]),p._v(" "),v("p",[p._v("├─(17) 017. 组织http响应的数据块头.mp4")]),p._v(" "),v("p",[p._v("├─(18) 018 通过http响应消息发送文件.mp4")]),p._v(" "),v("p",[p._v("├─(19) 019. Linux 中遍历目录的两种方式.mp4")]),p._v(" "),v("p",[p._v("├─(20) 020. 发送目录-上.mp4")]),p._v(" "),v("p",[p._v("├─(21) 021. 发送目录-下.mp4")]),p._v(" "),v("p",[p._v("├─(22) 022. 代码的补充和编译.mp4")]),p._v(" "),v("p",[p._v("├─(23) 023. 程序测试和部分bug的修改.mp4")]),p._v(" "),v("p",[p._v("├─(24) 024-非阻塞模式下关于sendfile函数的说明.mp4")]),p._v(" "),v("p",[p._v("├─(25) 025. 解决浏览器无法访问带特殊字符的文件的问题.mp4")]),p._v(" "),v("p",[p._v("├─(26) 026. 添加多线程处理.mp4")]),p._v(" "),v("p",[p._v("├─(27) 027. 第2阶段模块功能概述.mp4")]),p._v(" "),v("p",[p._v("├─(28) 028. Channel 模块的实现.mp4")]),p._v(" "),v("p",[p._v("├─(29) 029. ChannelMap 模块的实现 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(30) 030. ChannelMap 模块的实现 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(31) 031. Dispatcher 模块的实现思路.mp4")]),p._v(" "),v("p",[p._v("├─(32) 032. Dispatcher 的定义.mp4")]),p._v(" "),v("p",[p._v("├─(33) 033. EpollDispatcher 的实现 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(34) 034. EpollDispatcher 的实现 – 中.mp4")]),p._v(" "),v("p",[p._v("├─(35) 035. EpollDispatcher 的实现 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(36) 036. PollDispatcher 的实现 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(37) 037. PollDispatcher 的实现 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(38) 038. SelectDispatcher 的实现.mp4")]),p._v(" "),v("p",[p._v("├─(39) 039. EventLoop 模块的剖析.mp4")]),p._v(" "),v("p",[p._v("├─(40) 040. EventLoop 的初始化.mp4")]),p._v(" "),v("p",[p._v("├─(41) 041. 启动 EventLoop.mp4")]),p._v(" "),v("p",[p._v("├─(42) 042. 在 EVentLoop 中处理被激活的文件描述符的事件.mp4")]),p._v(" "),v("p",[p._v("├─(43) 043. 往 EventLoop 的任务队列中添加新任务.mp4")]),p._v(" "),v("p",[p._v("├─(44) 044. 主线程给子线程添加任务以及如何处理该任务.mp4")]),p._v(" "),v("p",[p._v("├─(45) 045. 处理任务队列中的任务.mp4")]),p._v(" "),v("p",[p._v("├─(46) 046. 将任务队列中的任务添加到 Dispatcher 的检测集合中.mp4")]),p._v(" "),v("p",[p._v("├─(47) 047. 任务队列中节点在 Dispatcher 中的删除和修改.mp4")]),p._v(" "),v("p",[p._v("├─(48) 048. 子线程 WorkerThread 的实现.mp4")]),p._v(" "),v("p",[p._v("├─(49) 049. 线程池 ThreadPool 的初始化.mp4")]),p._v(" "),v("p",[p._v("├─(50) 050. 线程池的启动和从线程池中取出一个反应堆实例.mp4")]),p._v(" "),v("p",[p._v("├─(51) 051. Buffer 的创建和销毁.mp4")]),p._v(" "),v("p",[p._v("├─(52) 052. Buffer 的扩容.mp4")]),p._v(" "),v("p",[p._v("├─(53) 053. Buffer 的数据写入-直接写.mp4")]),p._v(" "),v("p",[p._v("├─(54) 054. 通过 Buffer 接收套接字数据.mp4")]),p._v(" "),v("p",[p._v("├─(55) 055. 创建并初始化 TcpServer 实例.mp4")]),p._v(" "),v("p",[p._v("├─(56) 056. 启动 TcpServer.mp4")]),p._v(" "),v("p",[p._v("├─(57) 057. 主线程反应堆模型的事件添加和处理详解.mp4")]),p._v(" "),v("p",[p._v("├─(58) 058. 创建一个 TcpConnection 实例.mp4")]),p._v(" "),v("p",[p._v("├─(59) 059. 在 TcpConnection 接收客户端数据.mp4")]),p._v(" "),v("p",[p._v("├─(60) 060. HttpRequest 的定义和初始化.mp4")]),p._v(" "),v("p",[p._v("├─(61) 061. HttpRequest 资源重置和销毁.mp4")]),p._v(" "),v("p",[p._v("├─(62) 062. 添加和查找 HttpRequest 请求头.mp4")]),p._v(" "),v("p",[p._v("├─(63) 063. 解析请求行(通过指针方式解析非 sscanf 方式).mp4")]),p._v(" "),v("p",[p._v("├─(64) 064. 优化解析请求行的代码.mp4")]),p._v(" "),v("p",[p._v("├─(65) 065. 解析请求头并存储.mp4")]),p._v(" "),v("p",[p._v("├─(66) 066. 解析完整的 http 请求协议.mp4")]),p._v(" "),v("p",[p._v("├─(67) 067. 处理 http 请求 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(68) 068. HttpResponse 的定义和初始化.mp4")]),p._v(" "),v("p",[p._v("├─(69) 069. HttpREsponse 添加响应头和内存释放.mp4")]),p._v(" "),v("p",[p._v("├─(70) 070. 组织 HttpResponse 响应消息.mp4")]),p._v(" "),v("p",[p._v("├─(71) 071. 处理 Http 请求 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(72) 072. 修改发送目录和文件的函数.mp4")]),p._v(" "),v("p",[p._v("├─(73) 073. 在 TcpConnection 中接收并解析 Http 请求消息.mp4")]),p._v(" "),v("p",[p._v("├─(74) 074. 给客户端回复数据的两种方式-上.mp4")]),p._v(" "),v("p",[p._v("├─(75) 075. 给客户端回复数据的两种方式 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(76) 076. 内存资源的释放.mp4")]),p._v(" "),v("p",[p._v("├─(77) 077. 程序的编译和错误的修改 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(78) 078. 程序的编译和bug的修改 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(79) 079. 启动服务器和添加日志功能.mp4")]),p._v(" "),v("p",[p._v("├─(80) 080. 程序的调试和bug修改 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(81) 081. 程序的调试和bug修改 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(82) 082. 使用CPP重构项目-前言.mp4")]),p._v(" "),v("p",[p._v("├─(83) 083. 重构 Channel 类.mp4")]),p._v(" "),v("p",[p._v("├─(84) 084. 重构 Dispatcher 类.mp4")]),p._v(" "),v("p",[p._v("├─(85) 085. 重构 EpollDispatcher 类.mp4")]),p._v(" "),v("p",[p._v("├─(86) 086. 重构 PollDispatcher 类.mp4")]),p._v(" "),v("p",[p._v("├─(87) 087. 重构 SelectDispatcher 类.mp4")]),p._v(" "),v("p",[p._v("├─(88) 088. 重构 EventLoop 类 – 1.mp4")]),p._v(" "),v("p",[p._v("├─(89) 089. 重构 EventLoop 类 – 2.mp4")]),p._v(" "),v("p",[p._v("├─(90) 090. 重构 EventLoop l类 – 3.mp4")]),p._v(" "),v("p",[p._v("├─(91) 091. 重构 EventLoop 类 – 4.mp4")]),p._v(" "),v("p",[p._v("├─(92) 092. 重构 EventLoop 类 – 5.mp4")]),p._v(" "),v("p",[p._v("├─(93) 093. 重构 ThreadWorker 类.mp4")]),p._v(" "),v("p",[p._v("├─(94) 094. 重构 ThreadPool 类.mp4")]),p._v(" "),v("p",[p._v("├─(95) 095. 重构 TcpServer 类.mp4")]),p._v(" "),v("p",[p._v("├─(96) 096. 重构 Buffer 类 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(97) 097. 重构 Buffer 类 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(98) 098. 重构 HttpRequest 类 – 1.mp4")]),p._v(" "),v("p",[p._v("├─(99) 099. 重构 HttpRequest 类 – 2.mp4")]),p._v(" "),v("p",[p._v("├─(100) 100. 重构 HttpRequest 类 – 3.mp4")]),p._v(" "),v("p",[p._v("├─(101) 101. 重构 HttpRequest 类 – 4.mp4")]),p._v(" "),v("p",[p._v("├─(102) 102. 重构 HttpResponse 类.mp4")]),p._v(" "),v("p",[p._v("├─(103) 103. 重构 HttpResponse 类 – 续.mp4")]),p._v(" "),v("p",[p._v("├─(104) 104. 重构 TcpConnection 类 – 上.mp4")]),p._v(" "),v("p",[p._v("├─(105) 105. 重构 TcpConnection 类 – 下.mp4")]),p._v(" "),v("p",[p._v("├─(106) 106. 多反应堆服务器事件处理流程梳理.mp4")]),p._v(" "),v("p",[p._v("├─(107) 107. 程序的编译和语法上的bug修改.mp4")]),p._v(" "),v("p",[p._v("├─(108) 108. 测试和bug修改.mp4")]),p._v(" "),v("p",[p._v("├─(109) 109. 内容更正.mp4")]),p._v(" "),v("p",[p._v("(2)\\资料")]),p._v(" "),v("p",[p._v("├─(110) Http Web 服务器.pdf")]),p._v(" "),v("p",[p._v("├─(111) Http_高并发服务器 概述.pdf")]),p._v(" "),v("p",[p._v("├─(112) 代码.exe")]),p._v(" "),v("p",[p._v("├─(113) 图解HTTP-彩色版.pdf")]),p._v(" "),v("p",[p._v("├─(114) 项目模块-xmind.pdf")]),p._v(" "),v("h2",{attrs:{id:"下载地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[p._v("#")]),p._v(" 下载地址：")]),p._v(" "),v("p",[v("a",{attrs:{href:"https://www.itxbzxw.com/learn/qdkf/react/11368.html",target:"_blank",rel:"noopener noreferrer"}},[p._v("全新高并发Reactor服务器全栈开发实战 学习 React 就够啦-小白自学网"),v("OutboundLink")],1)])],1)}),[],!1,null,null,null);v.default=e.exports}}]);