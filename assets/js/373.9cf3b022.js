(window.webpackJsonp=window.webpackJsonp||[]).push([[373],{781:function(_,v,p){"use strict";p.r(v);var t=p(2),r=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("Boxx"),_._v(" "),v("p",[v("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/06/a5ed375371ab93283cf5f7a903d8efc2.jpg",alt:"深入现代C++核心特性 从智能指针到多线程 详解C++11实战技巧与应用"}})]),_._v(" "),v("h3",{attrs:{id:"课程介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[_._v("#")]),_._v(" 课程介绍")]),_._v(" "),v("p",[_._v("C++11是现代C++发展的重要里程碑，引入了众多强大的新特性，使得C++编程更加高效、安全且易用。本课程从基础到进阶，系统讲解C++11的核心特性，包括智能指针的内存管理与RAII手法、lambda表达式的灵活用法、多线程编程的高效实现以及chrono库在时间管理中的实际应用。")]),_._v(" "),v("p",[_._v("通过丰富的实例和实战场景，我们会深入探讨function与bind的函数式编程优势，移动语义如何优化性能，以及如何通过条件变量、生产者-消费者模型等机制高效使用线程库。课程设计紧贴实际应用，为开发复杂系统、提升编程效率奠定坚实基础。")]),_._v(" "),v("p",[_._v("无论您是希望巩固C++编程的基本功，还是想深入了解C++11的高级特性，这门课程都将是您不可或缺的选择!")]),_._v(" "),v("h3",{attrs:{id:"课程目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[_._v("#")]),_._v(" 课程目录")]),_._v(" "),v("p",[_._v("(1)\\第一章 课程介绍;目录中文件数:1个")]),_._v(" "),v("p",[_._v("├─1-1.接地气的使用C++_ev.mp4")]),_._v(" "),v("p",[_._v("(2)\\第七章 thread库;目录中文件数:9个")]),_._v(" "),v("p",[_._v("├─7-1.多线程编程的要点_ev.mp4")]),_._v(" "),v("p",[_._v("├─7-2.thread类的使用.mp4")]),_._v(" "),v("p",[_._v("├─7-3.条件变量的使用【1】.mp4")]),_._v(" "),v("p",[_._v("├─7-4.条件变量的使用【2】.mp4")]),_._v(" "),v("p",[_._v("├─7-5.线程间的通信.mp4")]),_._v(" "),v("p",[_._v("├─7-6.生产者消费者队列.mp4")]),_._v(" "),v("p",[_._v("├─7-7.生产者消费队列【有界队列的实现】.mp4")]),_._v(" "),v("p",[_._v("├─7-8.生产者消费者队列【无界队列的实现】.mp4")]),_._v(" "),v("p",[_._v("├─7-9.thread库提供的高层次抽象_ev.mp4")]),_._v(" "),v("p",[_._v("(3)\\第三章 function和bind;目录中文件数:2个")]),_._v(" "),v("p",[_._v("├─3-1.function和bind概念及用法.mp4")]),_._v(" "),v("p",[_._v("├─3-2.新的“回调”机制.mp4")]),_._v(" "),v("p",[_._v("(4)\\第二章 智能指针;目录中文件数:13个")]),_._v(" "),v("p",[_._v("├─2-1.内存管理及C++ RAII手法_ev.mp4")]),_._v(" "),v("p",[_._v("├─2-10.shared_ptr的应用【多线程安全及写时复制的实现1】.mp4")]),_._v(" "),v("p",[_._v("├─2-11.shared_ptr的应用【写时复制的实现2】.mp4")]),_._v(" "),v("p",[_._v("├─2-12.shared_ptr与uinque_ptr的删除器【总结1】.mp4")]),_._v(" "),v("p",[_._v("├─2-13.智能指针总结【总结2】_ev.mp4")]),_._v(" "),v("p",[_._v("├─2-2.shared_ptr的基本用法【1】.mp4")]),_._v(" "),v("p",[_._v("├─2-3.share_ptr的基本用法【2】.mp4")]),_._v(" "),v("p",[_._v("├─2-4.shared_ptr的细节.mp4")]),_._v(" "),v("p",[_._v("├─2-5.weak_ptr的概念及基本用法.mp4")]),_._v(" "),v("p",[_._v("├─2-6.使用weak_ptr与shared_ptr在多线程中管理内存.mp4")]),_._v(" "),v("p",[_._v("├─2-7.使用weak_ptr与shared_ptr避免循环引用.mp4")]),_._v(" "),v("p",[_._v("├─2-8.unique_ptr的概念及基本用法.mp4")]),_._v(" "),v("p",[_._v("├─2-9.unique_ptr的应用.mp4")]),_._v(" "),v("p",[_._v("(5)\\第五章 移动语义;目录中文件数:4个")]),_._v(" "),v("p",[_._v("├─5-1.拷贝控制及右值引用.mp4")]),_._v(" "),v("p",[_._v("├─5-2.移动语义.mp4")]),_._v(" "),v("p",[_._v("├─5-3.move函数和STL容器中的移动语义.mp4")]),_._v(" "),v("p",[_._v("├─5-4.移动语义的使用.mp4")]),_._v(" "),v("p",[_._v("(6)\\第六章 chrono库;目录中文件数:5个")]),_._v(" "),v("p",[_._v("├─6-1.使用chrono库处理时间.mp4")]),_._v(" "),v("p",[_._v("├─6-2.chrono库中的三种clock类型.mp4")]),_._v(" "),v("p",[_._v("├─6-3.时间间隔.mp4")]),_._v(" "),v("p",[_._v("├─6-4.时间点和时间间隔类型转换.mp4")]),_._v(" "),v("p",[_._v("├─6-5.C++ 11 chrono库之外.mp4")]),_._v(" "),v("p",[_._v("(7)\\第四章 lambda函数;目录中文件数:2个")]),_._v(" "),v("p",[_._v("├─4-1.lambda函数的概念及用法.mp4")]),_._v(" "),v("p",[_._v("├─4-2.lambda函数与STL算法.mp4")]),_._v(" "),v("p",[_._v("(8)\\配套课程资料;目录中文件数:1个")]),_._v(" "),v("p",[_._v("├─配套课程资料.exe")]),_._v(" "),v("h2",{attrs:{id:"下载地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[_._v("#")]),_._v(" 下载地址：")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://www.itxbzxw.com/learn/hdkf/c/11419.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("深入现代C++核心特性 从智能指针到多线程 详解C++11实战技巧与应用-小白自学网"),v("OutboundLink")],1)])],1)}),[],!1,null,null,null);v.default=r.exports}}]);