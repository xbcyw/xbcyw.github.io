(window.webpackJsonp=window.webpackJsonp||[]).push([[375],{780:function(p,_,v){"use strict";v.r(_);var m=v(2),e=Object(m.a)({},(function(){var p=this,_=p._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":p.$parent.slotKey}},[_("Boxx"),p._v(" "),_("p",[_("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/06/b9b312863d99058faf2a9c2e375b5a3e.jpg",alt:"WebRTC核心技术详解 跨平台实时音视频SDK从设计到实现 实时音视频打造高效跨平台"}})]),p._v(" "),_("h3",{attrs:{id:"课程介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[p._v("#")]),p._v(" 课程介绍")]),p._v(" "),_("p",[p._v("本课程以WebRTC技术为核心，深入解析跨平台实时音视频SDK的开发流程和实现细节。通过理论与实践结合的方式，逐步讲解从基础架构设计到高级功能实现的全过程。课程涵盖音视频采集、编码、传输、渲染以及QoS优化等核心技术模块，帮助学员从零到一掌握WebRTC的强大功能。课程设计以实用性为导向，辅以丰富的案例，适合有一定编程基础的开发者、音视频工程师及对实时通信技术感兴趣的从业者学习。")]),p._v(" "),_("h3",{attrs:{id:"课程目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[p._v("#")]),p._v(" 课程目录")]),p._v(" "),_("p",[p._v("├─1 跨平台sdk_win_demo效果演示.mp4")]),p._v(" "),_("p",[p._v("├─10 视频-获取摄像头的ID和名称并在UI界面展示.mp4")]),p._v(" "),_("p",[p._v("├─100 QoS-发送SenderReport到网络.mp4")]),p._v(" "),_("p",[p._v("├─101 QoS-调优SenderReport发送策略.mp4")]),p._v(" "),_("p",[p._v("├─102 QoS-处理对端发送的RTCP数据包.mp4")]),p._v(" "),_("p",[p._v("├─103 QoS-解析复合RTCP数据包1.mp4")]),p._v(" "),_("p",[p._v("├─104 QoS-解析复合RTCP数据包2.mp4")]),p._v(" "),_("p",[p._v("├─105 QoS-解析RR数据包1.mp4")]),p._v(" "),_("p",[p._v("├─106 QoS-解析RR数据包2.mp4")]),p._v(" "),_("p",[p._v("├─107 QoS-解析RR数据包3.mp4")]),p._v(" "),_("p",[p._v("├─108 QoS-解析RR数据包4.mp4")]),p._v(" "),_("p",[p._v("├─109 QoS-发送端计算RTT.mp4")]),p._v(" "),_("p",[p._v("├─11 视频-设计通用视频源IVideoSource.mp4")]),p._v(" "),_("p",[p._v("├─110 QoS-UI显示实时网络质量信息.mp4")]),p._v(" "),_("p",[p._v("├─111 QoS-解析NACK(丢包重传请求)数据包1.mp4")]),p._v(" "),_("p",[p._v("├─112 QoS-解析NACK(丢包重传请求)数据包2.mp4")]),p._v(" "),_("p",[p._v("├─113 QoS-响应对端的NACK(丢包重传请求).mp4")]),p._v(" "),_("p",[p._v("├─114 QoS-打包重传包为RTX格式.mp4")]),p._v(" "),_("p",[p._v("├─115 QoS-发送视频重传RTX包给对端.mp4")]),p._v(" "),_("p",[p._v("├─116 推流-推流各环节异常处理.mp4")]),p._v(" "),_("p",[p._v("├─117 推流-实现停止推流功能.mp4")]),p._v(" "),_("p",[p._v("├─118 推流-向信令服务发送停止推流请求.mp4")]),p._v(" "),_("p",[p._v("├─119 推流-推流小结.mp4")]),p._v(" "),_("p",[p._v("├─12 视频-包装摄像头为IVideoSource.mp4")]),p._v(" "),_("p",[p._v("├─120 音频-音频基础理论和推流框架.mp4")]),p._v(" "),_("p",[p._v("├─121 音频-创建音频设备并获取麦克风个数.mp4")]),p._v(" "),_("p",[p._v("├─122 音频-获取麦克风的ID和名称.mp4")]),p._v(" "),_("p",[p._v("├─123 音频-显示麦克风信息到UI界面.mp4")]),p._v(" "),_("p",[p._v("├─124 音频-包装麦克风为IAudioSource.mp4")]),p._v(" "),_("p",[p._v("├─125 音频-启动麦克风采集.mp4")]),p._v(" "),_("p",[p._v("├─126 音频-调整音视频设备启动UI层逻辑.mp4")]),p._v(" "),_("p",[p._v("├─127 音频-停止麦克风采集.mp4")]),p._v(" "),_("p",[p._v("├─128 音频-3A算法预处理&回声消除.mp4")]),p._v(" "),_("p",[p._v("├─129 音频-噪声抑制.mp4")]),p._v(" "),_("p",[p._v("├─13 视频-实现创建摄像头视频源的方法.mp4")]),p._v(" "),_("p",[p._v("├─130 音频-自动增益控制.mp4")]),p._v(" "),_("p",[p._v("├─131 音频-封装麦克风为XRTC音频源.mp4")]),p._v(" "),_("p",[p._v("├─132 音频-创建3A预处理Filter.mp4")]),p._v(" "),_("p",[p._v("├─133 音频-WebRTC音频3A处理核心流程.mp4")]),p._v(" "),_("p",[p._v("├─134 音频-设置最小采样率和声道数.mp4")]),p._v(" "),_("p",[p._v("├─135 音频-声道混合和重采样处理1.mp4")]),p._v(" "),_("p",[p._v("├─136 音频-声道混合和重采样处理2.mp4")]),p._v(" "),_("p",[p._v("├─137 音频-WebRTC音频3A处理.mp4")]),p._v(" "),_("p",[p._v("├─138 音频-创建OpusEncoderFilter.mp4")]),p._v(" "),_("p",[p._v("├─139 音频-Opus编解码器介绍.mp4")]),p._v(" "),_("p",[p._v("├─14 视频-启动摄像头采集.mp4")]),p._v(" "),_("p",[p._v("├─140 音频-创建Opus编码器.mp4")]),p._v(" "),_("p",[p._v("├─141 音频-Opus编码音频数据.mp4")]),p._v(" "),_("p",[p._v("├─142 音频-音频数据RTP打包并发送到网络.mp4")]),p._v(" "),_("p",[p._v("├─143 音频-定时发送SenderReport包.mp4")]),p._v(" "),_("p",[p._v("├─144 小结.mp4")]),p._v(" "),_("p",[p._v("├─15 视频-实现启动和停止音视频设备UI功能.mp4")]),p._v(" "),_("p",[p._v("├─16 视频-停止和销毁摄像头采集.mp4")]),p._v(" "),_("p",[p._v("├─17 基础-实现XRTCEngine的事件回调机制.mp4")]),p._v(" "),_("p",[p._v("├─18 视频-UI处理摄像头启动的结果.mp4")]),p._v(" "),_("p",[p._v("├─19 视频-视频动画是怎么产生的?.mp4")]),p._v(" "),_("p",[p._v("├─2 跨平台sdk抗弱网抗丢包效果演示.mp4")]),p._v(" "),_("p",[p._v("├─20 视频-RGB、YUV采样和存储详解.mp4")]),p._v(" "),_("p",[p._v("├─21 视频-定义通用的MediaFrame结构.mp4")]),p._v(" "),_("p",[p._v("├─22 视频-封装采集数据为MediaFrame结构.mp4")]),p._v(" "),_("p",[p._v("├─23 视频-分发摄像头采集数据.mp4")]),p._v(" "),_("p",[p._v("├─24 通用-SDK链式架构设计.mp4")]),p._v(" "),_("p",[p._v("├─25 通用-实现链式架构MediaChain.mp4")]),p._v(" "),_("p",[p._v("├─26 视频-实现摄像头预览.mp4")]),p._v(" "),_("p",[p._v("├─27 视频-实现UI本地预览按钮点击功能.mp4")]),p._v(" "),_("p",[p._v("├─28 视频-封装摄像头为VideoSource.mp4")]),p._v(" "),_("p",[p._v("├─29 视频-封装D3D9RenderSink.mp4")]),p._v(" "),_("p",[p._v("├─3 课程核心内容介绍.mp4")]),p._v(" "),_("p",[p._v("├─30 视频-实现摄像头预览Start方法.mp4")]),p._v(" "),_("p",[p._v("├─31 通用-实现链式架构InPin和OutPin.mp4")]),p._v(" "),_("p",[p._v("├─32 通用-实现InPin和OutPin的链接功能.mp4")]),p._v(" "),_("p",[p._v("├─33 通用-MediaObject添加Pin功能.mp4")]),p._v(" "),_("p",[p._v("├─34 通用-实现MediaChain的链接功能.mp4")]),p._v(" "),_("p",[p._v("├─35 视频-实现预览成功或者失败事件回调.mp4")]),p._v(" "),_("p",[p._v("├─36 视频-Direct3D理论知识.mp4")]),p._v(" "),_("p",[p._v("├─37 视频-传递窗口句柄HWND.mp4")]),p._v(" "),_("p",[p._v("├─38 视频-Direct3D初始化.mp4")]),p._v(" "),_("p",[p._v("├─39 视频-Direct3D视频渲染.mp4")]),p._v(" "),_("p",[p._v("├─4 开发环境准备和基础框架搭建.mp4")]),p._v(" "),_("p",[p._v("├─40 视频-视频缩放处理.mp4")]),p._v(" "),_("p",[p._v("├─41 视频-停止摄像头预览.mp4")]),p._v(" "),_("p",[p._v("├─42 推流-设计XRTCPusher.mp4")]),p._v(" "),_("p",[p._v("├─43 推流-实现UI开始推流按钮功能.mp4")]),p._v(" "),_("p",[p._v("├─44 推流-实现XRTCPushStream.mp4")]),p._v(" "),_("p",[p._v("├─45 推流-视频编码原理.mp4")]),p._v(" "),_("p",[p._v("├─46 推流-添加x264视频编码模块.mp4")]),p._v(" "),_("p",[p._v("├─47 推流-创建并启动x264编码线程.mp4")]),p._v(" "),_("p",[p._v("├─48 推流-编译x264库.mp4")]),p._v(" "),_("p",[p._v("├─49 推流-x264编码原理.mp4")]),p._v(" "),_("p",[p._v("├─5 基于duilib的windows UI界面设计.mp4")]),p._v(" "),_("p",[p._v("├─50 推流-详解x264编码参数.mp4")]),p._v(" "),_("p",[p._v("├─51 推流-设置x264编码参数.mp4")]),p._v(" "),_("p",[p._v("├─52 推流-开始X264编码1.mp4")]),p._v(" "),_("p",[p._v("├─53 推流-开始X264编码2.mp4")]),p._v(" "),_("p",[p._v("├─54 推流-封装XRTCMediaSink模块.mp4")]),p._v(" "),_("p",[p._v("├─55 推流-解析XRTC推流协议.mp4")]),p._v(" "),_("p",[p._v("├─56 推流-封装libcurl库.mp4")]),p._v(" "),_("p",[p._v("├─57 推流-向信令服务请求offer SDP.mp4")]),p._v(" "),_("p",[p._v("├─58 推流-解析信令服务返回结果.mp4")]),p._v(" "),_("p",[p._v("├─59 推流-实现SetRemoteSDP方法.mp4")]),p._v(" "),_("p",[p._v("├─6 引入WebRTC的通用基础库.mp4")]),p._v(" "),_("p",[p._v("├─60 推流-解析Offer SDP.mp4")]),p._v(" "),_("p",[p._v("├─61 推流-解析Offer MediaContent.mp4")]),p._v(" "),_("p",[p._v("├─62 推流-解析Offer Candidate.mp4")]),p._v(" "),_("p",[p._v("├─63 推流-解析Offer传输信息.mp4")]),p._v(" "),_("p",[p._v("├─64 推流-创建传输控制器类.mp4")]),p._v(" "),_("p",[p._v("├─65 推流-创建ICE传输通道.mp4")]),p._v(" "),_("p",[p._v("├─66 推流-创建Answer SDP.mp4")]),p._v(" "),_("p",[p._v("├─67 推流-生成Answer BUNDLE信息.mp4")]),p._v(" "),_("p",[p._v("├─68 推流-生成Answer 编解码信息.mp4")]),p._v(" "),_("p",[p._v("├─69 推流-生成Answer 编解码参数信息.mp4")]),p._v(" "),_("p",[p._v("├─7 XRTC-SDK线程模型设计.mp4")]),p._v(" "),_("p",[p._v("├─70 推流-生成Answer 传输相关信息.mp4")]),p._v(" "),_("p",[p._v("├─71 推流-生成Answer SSRC相关信息.mp4")]),p._v(" "),_("p",[p._v("├─72 推流-实现SetLocalSDP方法.mp4")]),p._v(" "),_("p",[p._v("├─73 推流-向信令服务发送Answer SDP.mp4")]),p._v(" "),_("p",[p._v("├─74 推流-处理ICE状态.mp4")]),p._v(" "),_("p",[p._v("├─75 推流-详解NALU三种RTP打包方式.mp4")]),p._v(" "),_("p",[p._v("├─76 推流-设计RTP打包基类.mp4")]),p._v(" "),_("p",[p._v("├─77 推流-从buffer中提取NALU索引数据.mp4")]),p._v(" "),_("p",[p._v("├─78 推流-H264 NALU数据RTP打包1.mp4")]),p._v(" "),_("p",[p._v("├─79 推流-H264 NALU数据RTP打包2.mp4")]),p._v(" "),_("p",[p._v("├─8 WebRTC线程的同步和异步调用.mp4")]),p._v(" "),_("p",[p._v("├─80 推流-H264 NALU数据RTP打包3.mp4")]),p._v(" "),_("p",[p._v("├─81 推流-H264 NALU数据RTP打包4.mp4")]),p._v(" "),_("p",[p._v("├─82 推流-详解RTP数据包格式.mp4")]),p._v(" "),_("p",[p._v("├─83 推流-RTP数据包封装1.mp4")]),p._v(" "),_("p",[p._v("├─84 推流-RTP数据包封装2.mp4")]),p._v(" "),_("p",[p._v("├─85 推流-RTP数据包封装3.mp4")]),p._v(" "),_("p",[p._v("├─86 推流-RTP数据包封装4.mp4")]),p._v(" "),_("p",[p._v("├─87 推流-发送RTP数据到网络.mp4")]),p._v(" "),_("p",[p._v("├─88 QoS-利用RTCP调优音视频QoS.mp4")]),p._v(" "),_("p",[p._v("├─89 QoS-创建VideoSendStream.mp4")]),p._v(" "),_("p",[p._v("├─9 视频-获取摄像头的数量.mp4")]),p._v(" "),_("p",[p._v("├─90 QoS-创建Module处理和生成RTCP包.mp4")]),p._v(" "),_("p",[p._v("├─91 QoS-统计发送数据包和数据量.mp4")]),p._v(" "),_("p",[p._v("├─92 QoS-实现定时机制发送SR包.mp4")]),p._v(" "),_("p",[p._v("├─93 QoS-生成RTCP复合数据包1.mp4")]),p._v(" "),_("p",[p._v("├─94 QoS-生成RTCP复合数据包2.mp4")]),p._v(" "),_("p",[p._v("├─95 QoS-生成RTCP复合数据包3.mp4")]),p._v(" "),_("p",[p._v("├─96 QoS-构造SenderReport数据包1.mp4")]),p._v(" "),_("p",[p._v("├─97 QoS-构造SenderReport数据包2.mp4")]),p._v(" "),_("p",[p._v("├─98 QoS-构造SenderReport数据包3.mp4")]),p._v(" "),_("p",[p._v("├─99 QoS-构造SenderReport数据包4.mp4")]),p._v(" "),_("h2",{attrs:{id:"下载地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[p._v("#")]),p._v(" 下载地址：")]),p._v(" "),_("p",[_("a",{attrs:{href:"https://www.itxbzxw.com/learn/hdkf/c/11437.html",target:"_blank",rel:"noopener noreferrer"}},[p._v("WebRTC核心技术详解 跨平台实时音视频SDK从设计到实现 实时音视频打造高效跨平台-小白自学网"),_("OutboundLink")],1)])],1)}),[],!1,null,null,null);_.default=e.exports}}]);