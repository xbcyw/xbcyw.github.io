(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{423:function(v,_,p){"use strict";p.r(_);var m=p(2),t=Object(m.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("Boxx"),v._v(" "),_("p",[_("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/05/717108fbf90988672f2c9fd5c7a8ab3c.jpg",alt:"剪枝优化与深度学习模型的高效部署全解析 基于Docker和TF-Serving的全流程实践"}})]),v._v(" "),_("h3",{attrs:{id:"课程介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[v._v("#")]),v._v(" 课程介绍：")]),v._v(" "),_("p",[v._v("本课程旨在带领学习者掌握深度学习模型从部署到剪枝优化的完整流程。通过深入讲解如何配置环境、部署模型、以及如何通过剪枝技术提升模型性能，您将获得实战经验，能将深度学习模型从开发到部署的整个流程高效实施。")]),v._v(" "),_("p",[v._v("课程内容包括：")]),v._v(" "),_("p",[v._v("1. 模型部署与环境配置")]),v._v(" "),_("p",[v._v("– 学习如何使用Docker配置深度学习环境，搭建PyTorch环境。")]),v._v(" "),_("p",[v._v("– 使用阿里云镜像以及TF-Serving技术，完成深度学习模型的容器化部署。")]),v._v(" "),_("p",[v._v("– 演示如何加载并启动深度学习模型服务，并通过模型部署测试进行效果验证。")]),v._v(" "),_("p",[v._v("2. 剪枝优化技术")]),v._v(" "),_("p",[v._v("– 了解剪枝技术的核心原理，探索如何通过稀疏化模型参数提高效率。")]),v._v(" "),_("p",[v._v("– 深入学习常见的剪枝方法，学习如何应用L1正则化对模型进行优化。")]),v._v(" "),_("p",[v._v("– 完成模型剪枝后，进行微调与优化，确保性能提升。")]),v._v(" "),_("p",[v._v("3. 实践与优化")]),v._v(" "),_("p",[v._v("– 通过Fashion数据集进行实际操作，展示如何加载并服务优化后的模型。")]),v._v(" "),_("p",[v._v("– 解读经典卷积神经网络中的BatchNorm模块与训练参数，帮助您在剪枝过程中调整参数，优化模型效果。")]),v._v(" "),_("p",[v._v("通过本课程，您将掌握深度学习模型从环境配置到优化剪枝的全流程，为模型的高效部署与性能优化提供强大支持，助力您在AI应用中取得更好的成果")]),v._v(" "),_("h3",{attrs:{id:"课程目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[v._v("#")]),v._v(" 课程目录")]),v._v(" "),_("p",[v._v("├─01.课程简介.mp4")]),v._v(" "),_("p",[v._v("├─02.所需基本环境配置.mp4")]),v._v(" "),_("p",[v._v("├─03.模型加载与数据预处理.mp4")]),v._v(" "),_("p",[v._v("├─04.接收与预测模块实现.mp4")]),v._v(" "),_("p",[v._v("├─05.效果实例演示.mp4")]),v._v(" "),_("p",[v._v("├─07.项目所需配置文件介绍.mp4")]),v._v(" "),_("p",[v._v("├─08.加载参数与模型权重.mp4")]),v._v(" "),_("p",[v._v("├─09.数据预处理.mp4")]),v._v(" "),_("p",[v._v("├─10.返回线性预测结果.mp4")]),v._v(" "),_("p",[v._v("├─11.docker简介.mp4")]),v._v(" "),_("p",[v._v("├─12.docker安装与配置.mp4")]),v._v(" "),_("p",[v._v("├─13.阿里云镜像配置.mp4")]),v._v(" "),_("p",[v._v("├─14.基于docker配置pytorch环境.mp4")]),v._v(" "),_("p",[v._v("├─15.安装演示环境所需依赖.mp4")]),v._v(" "),_("p",[v._v("├─16.复制所需配置到容器中.mp4")]),v._v(" "),_("p",[v._v("├─17.上传与下载配置好的项目.mp4")]),v._v(" "),_("p",[v._v("├─18.tf-serving项目获取与配置.mp4")]),v._v(" "),_("p",[v._v("├─19.加载并启动模型服务.mp4")]),v._v(" "),_("p",[v._v("├─20.测试模型部署效果.mp4")]),v._v(" "),_("p",[v._v("├─21.fashion数据集获取.mp4")]),v._v(" "),_("p",[v._v("├─22.加载fashion模型启动服务.mp4")]),v._v(" "),_("p",[v._v("├─23.论文算法核心框架概述.mp4")]),v._v(" "),_("p",[v._v("├─24.BatchNorm要解决的问题.mp4")]),v._v(" "),_("p",[v._v("├─25.BN的本质作用.mp4")]),v._v(" "),_("p",[v._v("├─26.额外的训练参数解读.mp4")]),v._v(" "),_("p",[v._v("├─27.稀疏化原理与效果.mp4")]),v._v(" "),_("p",[v._v("├─28.整体案例流程解读.mp4")]),v._v(" "),_("p",[v._v("├─29.加入L1正则化来进行更新.mp4")]),v._v(" "),_("p",[v._v("├─30.剪枝模块介绍.mp4")]),v._v(" "),_("p",[v._v("├─31.筛选需要的特征图.mp4")]),v._v(" "),_("p",[v._v("├─32.剪枝后模型参数赋值.mp4")]),v._v(" "),_("p",[v._v("├─33.微调完成剪枝模型.mp4")]),v._v(" "),_("p",[v._v("├─34.模型剪枝分析.mp4")]),v._v(" "),_("p",[v._v("├─35.常见剪枝方法介绍.mp4")]),v._v(" "),_("p",[v._v("├─36.mobilenet简介.mp4")]),v._v(" "),_("p",[v._v("├─37.经典卷积计算量与参数量分析.mp4")]),v._v(" "),_("p",[v._v("├─38.深度可分离卷积的作用与效果.mp4")]),v._v(" "),_("p",[v._v("├─39.参数与计算量的比较.mp4")]),v._v(" "),_("p",[v._v("├─40.V1版本效果分析.mp4")]),v._v(" "),_("p",[v._v("├─41.V2版本改进以及Relu激活函数的问题.mp4")]),v._v(" "),_("p",[v._v("├─42.倒残差结构的作用.mp4")]),v._v(" "),_("p",[v._v("├─43.V2整体架构与效果分析.mp4")]),v._v(" "),_("p",[v._v("├─44.V3版本网络架构分析.mp4")]),v._v(" "),_("p",[v._v("├─45.SE模块作用与效果解读.mp4")]),v._v(" "),_("p",[v._v("├─46.代码实现mobilenetV3网络架构.mp4")]),v._v(" "),_("p",[v._v("├─47.卷积网络参数定义.mp4")]),v._v(" "),_("p",[v._v("├─48.网络流程解读.mp4")]),v._v(" "),_("p",[v._v("├─49.Vision模块功能解读.mp4")]),v._v(" "),_("p",[v._v("├─50.分类任务数据集定义与配置.mp4")]),v._v(" "),_("p",[v._v("├─51.图像增强的作用.mp4")]),v._v(" "),_("p",[v._v("├─52.数据预处理与数据增强模块.mp4")]),v._v(" "),_("p",[v._v("├─53.Batch数据制作.mp4")]),v._v(" "),_("p",[v._v("├─54.迁移学习的目标.mp4")]),v._v(" "),_("p",[v._v("├─55.迁移学习策略.mp4")]),v._v(" "),_("p",[v._v("├─56.加载训练好的网络模型.mp4")]),v._v(" "),_("p",[v._v("├─57.优化器模块配置.mp4")]),v._v(" "),_("p",[v._v("├─58.实现训练模块.mp4")]),v._v(" "),_("p",[v._v("├─59.训练结果与模型保存.mp4")]),v._v(" "),_("p",[v._v("├─60.加载模型对测试数据进行预测.mp4")]),v._v(" "),_("p",[v._v("├─61.额外补充-Resnet论文解读.mp4")]),v._v(" "),_("p",[v._v("├─62.额外补充-Resnet网络架构解读.mp4")]),v._v(" "),_("p",[v._v("├─63.猫狗识别任务与数据简介.mp4")]),v._v(" "),_("p",[v._v("├─64.卷积网络涉及参数解读.mp4")]),v._v(" "),_("p",[v._v("├─65.网络架构配置.mp4")]),v._v(" "),_("p",[v._v("├─66.卷积模型训练与识别效果展示.mp4")]),v._v(" "),_("p",[v._v("├─资料.zip")]),v._v(" "),_("h2",{attrs:{id:"下载地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[v._v("#")]),v._v(" 下载地址：")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://www.itxbzxw.com/learn/rgongzhineng/11169.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("剪枝优化与深度学习模型的高效部署全解析 基于Docker和TF-Serving的全流程实践-小白自学网"),_("OutboundLink")],1)])],1)}),[],!1,null,null,null);_.default=t.exports}}]);