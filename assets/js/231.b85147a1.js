(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{637:function(v,_,p){"use strict";p.r(_);var t=p(2),e=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("Boxx"),v._v(" "),_("p",[_("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/07/cb38bfc5f3a04da2537e78a434dc1ff3.jpg",alt:"Mini-React完整训练营 实现任务调度+Fiber架构+Hooks机制全流程开发+项目实战"}})]),v._v(" "),_("h3",{attrs:{id:"课程介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[v._v("#")]),v._v(" 课程介绍")]),v._v(" "),_("p",[v._v("本课程由前端资深架构师 崔效瑞 倾力打造，专为希望深入掌握 React 原理、源码和底层架构的开发者设计。")]),v._v(" "),_("p",[v._v("通过本训练营，你将从零手写实现一个完整的 mini-react 框架，在实战中深入理解 React 的 Fiber 架构、任务调度、diff 算法、事件绑定、props 更新机制、以及 Hooks(useState、useEffect) 的底层实现原理，并完成一个 Todo List 应用，打通理论到实践的全链路。")]),v._v(" "),_("p",[v._v("从零开始手写最简 mini-react 并支持 JSX")]),v._v(" "),_("p",[v._v("实现任务调度器和 Fiber 架构原理剖析")]),v._v(" "),_("p",[v._v("还原 function component 渲染与更新流程")]),v._v(" "),_("p",[v._v("深入实现 diff 算法及优化更新性能")]),v._v(" "),_("p",[v._v("完整实现 useState、useEffect 等 Hooks")]),v._v(" "),_("p",[v._v("项目实战：基于 mini-react 实现 Todo List 应用")]),v._v(" "),_("h3",{attrs:{id:"课程目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[v._v("#")]),v._v(" 课程目录")]),v._v(" "),_("p",[v._v("(1)\\1;目录中文件数:4个")]),v._v(" "),_("p",[v._v("├─01-实现最简 mini-react .mp4")]),v._v(" "),_("p",[v._v("├─02-使用 jsx .mp4")]),v._v(" "),_("p",[v._v("├─扩展-使用 vitest 做单元测试.mp4")]),v._v(" "),_("p",[v._v("├─扩展-自定义 react的名字.mp4")]),v._v(" "),_("p",[v._v("(2)\\2;目录中文件数:3个")]),v._v(" "),_("p",[v._v("├─3. 实现任务调度器.mp4")]),v._v(" "),_("p",[v._v("├─4. 实现 fiber 架构.mp4")]),v._v(" "),_("p",[v._v("├─code.exe")]),v._v(" "),_("p",[v._v("(3)\\3;目录中文件数:4个")]),v._v(" "),_("p",[v._v("├─5. 实现统一提交.mp4")]),v._v(" "),_("p",[v._v("├─6. 实现 function component.mp4")]),v._v(" "),_("p",[v._v("├─7. 重构 function component.mp4")]),v._v(" "),_("p",[v._v("├─code.exe")]),v._v(" "),_("p",[v._v("(4)\\4;目录中文件数:3个")]),v._v(" "),_("p",[v._v("├─10. 重构 update props .mp4")]),v._v(" "),_("p",[v._v("├─8. 实现事件绑定.mp4")]),v._v(" "),_("p",[v._v("├─9.update props.mp4")]),v._v(" "),_("p",[v._v("(5)\\5;目录中文件数:4个")]),v._v(" "),_("p",[v._v("├─1. diff-更新 children.mp4")]),v._v(" "),_("p",[v._v("├─2. diff-删除多余的老节点.mp4")]),v._v(" "),_("p",[v._v("├─3. 解决 edge case 的方式.mp4")]),v._v(" "),_("p",[v._v("├─4. 优化更新 减少不必要的计算.mp4")]),v._v(" "),_("p",[v._v("(6)\\6;目录中文件数:3个")]),v._v(" "),_("p",[v._v("├─1. 实现 useState.mp4")]),v._v(" "),_("p",[v._v("├─2-批量执行 action.mp4")]),v._v(" "),_("p",[v._v("├─3-提前检测 减少不必要的更新.mp4")]),v._v(" "),_("p",[v._v("(7)\\7;目录中文件数:3个")]),v._v(" "),_("p",[v._v("├─1. 实现 useEffect.mp4")]),v._v(" "),_("p",[v._v("├─2. 实现 cleanup.mp4")]),v._v(" "),_("p",[v._v("├─3. ending.mp4")]),v._v(" "),_("p",[v._v("(8)\\8-todo-list;目录中文件数:4个")]),v._v(" "),_("p",[v._v("├─01-todos功能展示.mp4")]),v._v(" "),_("p",[v._v("├─02-todos.mp4")]),v._v(" "),_("p",[v._v("├─03-todos.mp4")]),v._v(" "),_("p",[v._v("├─code.exe")]),v._v(" "),_("h2",{attrs:{id:"下载地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[v._v("#")]),v._v(" 下载地址：")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://www.itxbzxw.com/learn/qdkf/react/11537.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("Mini-React完整训练营 实现任务调度+Fiber架构+Hooks机制全流程开发+项目实战-小白自学网"),_("OutboundLink")],1)])],1)}),[],!1,null,null,null);_.default=e.exports}}]);