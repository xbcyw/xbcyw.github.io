(window.webpackJsonp=window.webpackJsonp||[]).push([[596],{1003:function(p,v,_){"use strict";_.r(v);var m=_(2),t=Object(m.a)({},(function(){var p=this,v=p._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":p.$parent.slotKey}},[v("Boxx"),p._v(" "),v("p",[v("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2025/01/0f83fc70058227cc5d4d2c7dadd2efa3.png",alt:"零声-DPDK网络存储虚拟化开发（vpp/OvS/DDos/SDN/NFV/SPDK）"}})]),p._v(" "),v("h3",{attrs:{id:"资源目录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#资源目录"}},[p._v("#")]),p._v(" 资源目录：")]),p._v(" "),v("p",[p._v("├──视频")]),p._v(" "),v("p",[p._v("| ├──1.【dpdk网络】协议栈之arp-icmp的实现")]),p._v(" "),v("p",[p._v("| | ├──1.课程学习路线与大纲内容.mp4 218.36M")]),p._v(" "),v("p",[p._v("| | ├──10.arp-table的实现.mp4 374.69M")]),p._v(" "),v("p",[p._v("| | ├──2.dpdk环境搭建与多队列网卡.mp4 531.88M")]),p._v(" "),v("p",[p._v("| | ├──3.dpdk网卡绑定与arp.mp4 498.98M")]),p._v(" "),v("p",[p._v("| | ├──4.dpdk发送过程的实现.mp4 468.17M")]),p._v(" "),v("p",[p._v("| | ├──5.dpdk发送过程调试.mp4 152.20M")]),p._v(" "),v("p",[p._v("| | ├──6.dpdk-arp实现.mp4 288.53M")]),p._v(" "),v("p",[p._v("| | ├──7.arp 调试流程.mp4 105.03M")]),p._v(" "),v("p",[p._v("| | ├──8.dpdk-icmp实现.mp4 303.12M")]),p._v(" "),v("p",[p._v("| | └──9.dpdk-icmp流程调试与checksum实现.mp4 77.69M")]),p._v(" "),v("p",[p._v("| ├──10.【虚拟化与云原生】DPDK的虚拟交换机框架 OvS")]),p._v(" "),v("p",[p._v("| | ├──1 硬件虚拟化-系统虚拟化-进程虚拟化.mp4 464.55M")]),p._v(" "),v("p",[p._v("| | ├──2 cpu虚拟化到ntytcp的使用.mp4 499.43M")]),p._v(" "),v("p",[p._v("| | ├──3 ovs编译安装-ovs核心组件内容.mp4 238.00M")]),p._v(" "),v("p",[p._v("| | ├──4 网络命名空间与vsctl的vlan划分.mp4 206.75M")]),p._v(" "),v("p",[p._v("| | ├──5 ovs-vsctl的网桥-网口操作.mp4 403.42M")]),p._v(" "),v("p",[p._v("| | ├──6 qemu-kvm多vm管理以及对应虚拟化技术.mp4 289.08M")]),p._v(" "),v("p",[p._v("| | ├──7 virsh启动虚拟网卡与ovs-vsctl操作的流程.mp4 518.90M")]),p._v(" "),v("p",[p._v("| | └──8 ovs-openflow与json请求.mp4 482.05M")]),p._v(" "),v("p",[p._v("| ├──11.【虚拟化与云原生】virtio-vhost虚拟化")]),p._v(" "),v("p",[p._v("| | ├──1 virtio与vhost的工作原理.mp4 427.03M")]),p._v(" "),v("p",[p._v("| | ├──10 vhost与virtio的总结.mp4 259.98M")]),p._v(" "),v("p",[p._v("| | ├──2 vhost与qemu通信协议实现.mp4 420.30M")]),p._v(" "),v("p",[p._v("| | ├──3 vhost通信协议解析get feature.mp4 564.97M")]),p._v(" "),v("p",[p._v("| | ├──4 vhost与virtio通信与recvmsg的作用.mp4 584.08M")]),p._v(" "),v("p",[p._v("| | ├──5 virtio的前后端网卡与ifreq的作用.mp4 758.08M")]),p._v(" "),v("p",[p._v("| | ├──6 virtio的setmem与vring的设置.mp4 656.50M")]),p._v(" "),v("p",[p._v("| | ├──7 gpa,gva,hva,hpa之间的关系.mp4 423.10M")]),p._v(" "),v("p",[p._v("| | ├──8 ifreq的tap-tun创建.mp4 715.25M")]),p._v(" "),v("p",[p._v("| | └──9 vring的物理内存与虚拟内存映射.mp4 700.17M")]),p._v(" "),v("p",[p._v("| ├──12.【dpdk网络】基础组件")]),p._v(" "),v("p",[p._v("| | ├──1 mempool与mbuf的源码分析讲解.mp4 278.64M")]),p._v(" "),v("p",[p._v("| | ├──2 dpdk-ringbuffer源码分析.mp4 187.13M")]),p._v(" "),v("p",[p._v("| | ├──3 dpdk-igb_uio源码分析.mp4 375.65M")]),p._v(" "),v("p",[p._v("| | ├──4 dpdk-kni源码分析.mp4 230.63M")]),p._v(" "),v("p",[p._v("| | └──5 rcu的实现与互斥锁-自旋锁-读写锁.mp4 381.84M")]),p._v(" "),v("p",[p._v("| ├──13.【dpdk网络】tcp并发")]),p._v(" "),v("p",[p._v("| | ├──1 tcp并发连接的设计.mp4 266.40M")]),p._v(" "),v("p",[p._v("| | ├──2 tcp并发epoll的实现.mp4 254.23M")]),p._v(" "),v("p",[p._v("| | ├──3 tcp并发协议栈与epoll的回调与并发测试.mp4 175.14M")]),p._v(" "),v("p",[p._v("| | ├──4 bpf与bpftrace系统-网络挂载实现.mp4 371.00M")]),p._v(" "),v("p",[p._v("| | └──5 bpf与bpftrace应用程序ntyco的挂载监控.mp4 200.83M")]),p._v(" "),v("p",[p._v("| ├──14.【存储】spdk文件系统实现")]),p._v(" "),v("p",[p._v("| | ├──1 文件系统功能拆解与设计分析.mp4 502.01M")]),p._v(" "),v("p",[p._v("| | ├──2 件系统引入线程与json配置解析.mp4 527.08M")]),p._v(" "),v("p",[p._v("| | ├──3 文件系统四层架构设计与构建git版本管理.mp4 398.67M")]),p._v(" "),v("p",[p._v("| | ├──4 从blob读写到文件系统的原语操作实现.mp4 748.54M")]),p._v(" "),v("p",[p._v("| | ├──5 syscall的hook实现.mp4 683.40M")]),p._v(" "),v("p",[p._v("| | ├──6 基数树对文件系统内存管理.mp4 857.19M")]),p._v(" "),v("p",[p._v("| | ├──7 测试用例与调试入口函数.mp4 568.86M")]),p._v(" "),v("p",[p._v("| | └──8 文件系统posix api的兼容问题与文件夹设计.mp4 418.23M")]),p._v(" "),v("p",[p._v("| ├──15.【xx虚拟化与云原生】高性能4层负载均衡器 DPVS")]),p._v(" "),v("p",[p._v("| | ├──1 dpvs的技术组件与功能实现.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──2 dpvs 与lvs+keepalived的关系.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──3 dpvs的FNat-NAT-SNAT模式.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──4 通过quagga配置ospf.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──5 dpvs测试用例 ipset-tc-mempool.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | └──6 dpvs的tc流控操作与源码实现.mp4 2.93M")]),p._v(" "),v("p",[p._v("| ├──16.【xx性能工具】TRex-iperf3-dpdk-pktgen")]),p._v(" "),v("p",[p._v("| | ├──1 vcl与iperf3性能测试 客户端与服务器.mp4 258.99M")]),p._v(" "),v("p",[p._v("| | ├──2 TRex的运行原理与dpdk的关系.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──3 流编排与自动化框架.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | └──4 dpdk-pktgen命令讲解.mp4 2.93M")]),p._v(" "),v("p",[p._v("| ├──17.【xx存储】spdk kv存储的实现")]),p._v(" "),v("p",[p._v("| | ├──1 为kv存储加上conf文件.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──2 bdev与blob对于kv存储的选择.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──3 kv service接口 set,get,modify,delete.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──4 pagechunk的get与put.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──5 btree-hashmap-radixtree-rbtree之间的选择.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──6 slab分配slot与释放slot.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | ├──7 KV存储拆解 Set, Get, Mod, Del.mp4 2.93M")]),p._v(" "),v("p",[p._v("| | └──8 kv存储测试用例与性能测试.mp4 2.93M")]),p._v(" "),v("p",[p._v("| ├──2.【dpdk网络】协议栈之udp-tcp的实现")]),p._v(" "),v("p",[p._v("| | ├──1.arp request实现.mp4 367.26M")]),p._v(" "),v("p",[p._v("| | ├──10.tcp三次握手实现之dpdk代码调试.mp4 214.98M")]),p._v(" "),v("p",[p._v("| | ├──2.arp 调试流程.mp4 99.53M")]),p._v(" "),v("p",[p._v("| | ├──3.协议栈架构设计优化.mp4 474.93M")]),p._v(" "),v("p",[p._v("| | ├──4.udp实现之udp系统api的设计.mp4 180.70M")]),p._v(" "),v("p",[p._v("| | ├──5.udp实现之sbuf与rbuf的环形队列.mp4 385.83M")]),p._v(" "),v("p",[p._v("| | ├──6.udp实现之发送流程与并发解耦.mp4 378.40M")]),p._v(" "),v("p",[p._v("| | ├──7.udp实现之架构设计与调试.mp4 350.42M")]),p._v(" "),v("p",[p._v("| | ├──8.tcp 三次握手实现之dpdk tcp流程架构设计.mp4 367.74M")]),p._v(" "),v("p",[p._v("| | └──9.tcp三次握手实现之dpdk tcp11个状态实现.mp4 474.35M")]),p._v(" "),v("p",[p._v("| ├──3.【dpdk网络】协议栈之tcp的实现")]),p._v(" "),v("p",[p._v("| | ├──1.tcp数据传输之ack与seqnum的确认实现.mp4 406.21M")]),p._v(" "),v("p",[p._v("| | ├──10.重构网络协议分发的流程.mp4 357.22M")]),p._v(" "),v("p",[p._v("| | ├──2.tcp数据传输之ack与seqnum代码实现.mp4 93.33M")]),p._v(" "),v("p",[p._v("| | ├──3.tcp协议api实现之bind-listen的实现.mp4 323.39M")]),p._v(" "),v("p",[p._v("| | ├──4.tcp协议api实现之accept的实现.mp4 289.94M")]),p._v(" "),v("p",[p._v("| | ├──5.tcp协议api实现之send-recv的实现.mp4 240.68M")]),p._v(" "),v("p",[p._v("| | ├──6.tcp协议api实现之close的实现.mp4 253.20M")]),p._v(" "),v("p",[p._v("| | ├──7.tcp协议栈调试之段错误与逻辑流程.mp4 303.22M")]),p._v(" "),v("p",[p._v("| | ├──8.tcp协议栈调试之ringbuffer内存错误…mp4 258.82M")]),p._v(" "),v("p",[p._v("| | └──9.dpdk kni的原理与kni启动.mp4 357.22M")]),p._v(" "),v("p",[p._v("| ├──4.【dpdk网络】基础组件")]),p._v(" "),v("p",[p._v("| | ├──1 kni抓包调试tcpdump.mp4 121.01M")]),p._v(" "),v("p",[p._v("| | ├──10 dpdk 布谷鸟hash原理与使用.mp4 393.19M")]),p._v(" "),v("p",[p._v("| | ├──2 dpdk kni mempool错误与内存泄漏.mp4 167.15M")]),p._v(" "),v("p",[p._v("| | ├──3 DPDK的kni内核处理流程(补).mp4 1.98G")]),p._v(" "),v("p",[p._v("| | ├──4 dpdk dns处理流程(1).mp4 472.65M")]),p._v(" "),v("p",[p._v("| | ├──5 dpdk dns处理流程(2).mp4 468.10M")]),p._v(" "),v("p",[p._v("| | ├──6 基于熵的ddos检测的数学理论.mp4 295.51M")]),p._v(" "),v("p",[p._v("| | ├──7 dpdk ddos熵计算代码实现.mp4 196.55M")]),p._v(" "),v("p",[p._v("| | ├──8 dpdk ddos attach检测准确度调试.mp4 69.57M")]),p._v(" "),v("p",[p._v("| | └──9 ddos attack 测试工具hping3.mp4 75.57M")]),p._v(" "),v("p",[p._v("| ├──5.【安全与网关开发】可扩展的矢量数据包处理框架VPP(c-c++)")]),p._v(" "),v("p",[p._v("| | ├──1 vpp环境部署与vpp命令讲解.mp4 465.21M")]),p._v(" "),v("p",[p._v("| | ├──2 vpp源码-plugin流程.mp4 523.94M")]),p._v(" "),v("p",[p._v("| | ├──3 flowtable的plugin的运行流程.mp4 391.59M")]),p._v(" "),v("p",[p._v("| | ├──4 flowtable的get flowinfo实现.mp4 286.63M")]),p._v(" "),v("p",[p._v("| | ├──5 flowtable的loadbalancer的框架.mp4 286.63M")]),p._v(" "),v("p",[p._v("| | ├──6 flowtable流程分析.mp4 159.40M")]),p._v(" "),v("p",[p._v("| | ├──7 vpp多网口数据接收与转发.mp4 233.51M")]),p._v(" "),v("p",[p._v("| | └──8 解决plugin编译加载失败.mp4 119.41M")]),p._v(" "),v("p",[p._v("| ├──6.【安全与网关开发】可扩展的矢量数据包处理框架VPP(c-c++) 源码")]),p._v(" "),v("p",[p._v("| | ├──1 vpp启动load so-注册node-函数init.mp4 476.87M")]),p._v(" "),v("p",[p._v("| | ├──2 vpp的运行流程 协程的实现-node的运行.mp4 374.28M")]),p._v(" "),v("p",[p._v("| | ├──3 vpp的结构体vlib_main.mp4 365.33M")]),p._v(" "),v("p",[p._v("| | ├──4 vpp结构体 vnet_main以及vpp内容总结.mp4 212.52M")]),p._v(" "),v("p",[p._v("| | ├──5 vcl与posix对nginx-redis性能对比.mp4 318.91M")]),p._v(" "),v("p",[p._v("| | ├──6 vppcom实现tcpserver以及vcl配置.mp4 379.20M")]),p._v(" "),v("p",[p._v("| | ├──7 vcl与posx对比-与vcl分层模型.mp4 302.77M")]),p._v(" "),v("p",[p._v("| | └──8 vcl的session管理与fd.io文档.mp4 319.92M")]),p._v(" "),v("p",[p._v("| ├──7.【安全与网关开发】golang的网络开发框架 nff-go(golang)")]),p._v(" "),v("p",[p._v("| | ├──1 nff-go的技术原理分析.mp4 310.70M")]),p._v(" "),v("p",[p._v("| | ├──2 nff-go数据接收代码实现.mp4 189.30M")]),p._v(" "),v("p",[p._v("| | ├──3 nff-go收发数据与包解析显示.mp4 196.86M")]),p._v(" "),v("p",[p._v("| | └──4 ipsec协议解析与strongswan的ipsec.mp4 350.67M")]),p._v(" "),v("p",[p._v("| ├──8.【存储】高效磁盘io读写 spdk©")]),p._v(" "),v("p",[p._v("| | ├──1 存储框架spdk-为技术栈打开一扇存储的大门.mp4 531.96M")]),p._v(" "),v("p",[p._v("| | ├──2 spdk环境与vhost-NVMe分析.mp4 298.22M")]),p._v(" "),v("p",[p._v("| | ├──3 手把手实现spdk_server(1).mp4 381.37M")]),p._v(" "),v("p",[p._v("| | ├──4 手把手实现spdk_server(2).mp4 497.43M")]),p._v(" "),v("p",[p._v("| | └──5 nvme与pcie以及手写nvme读写操作.mp4 628.84M")]),p._v(" "),v("p",[p._v("| ├──9.【存储】高效磁盘io读写 spdk©")]),p._v(" "),v("p",[p._v("| | ├──1 bdev与blobstore的代码关系.mp4 377.70M")]),p._v(" "),v("p",[p._v("| | ├──2 blobstore的读写操作实现与rpc的关系.mp4 475.18M")]),p._v(" "),v("p",[p._v("| | ├──3 fio ioengine plugin开发与性能对比.mp4 515.31M")]),p._v(" "),v("p",[p._v("| | └──4 fio ioengine模块开发与blobl操作.mp4 616.31M")]),p._v(" "),v("p",[p._v("| └──dpdk.jpeg 3.50M")]),p._v(" "),v("p",[p._v("└──资料")]),p._v(" "),v("p",[p._v("| └──资料.zip 82.42M")]),p._v(" "),v("h2",{attrs:{id:"下载地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[p._v("#")]),p._v(" 下载地址：")]),p._v(" "),v("p",[v("a",{attrs:{href:"https://www.itxbzxw.com/learn/yunwei/10406.html",target:"_blank",rel:"noopener noreferrer"}},[p._v("零声-DPDK网络存储虚拟化开发（vpp/OvS/DDos/SDN/NFV/SPDK）-小白自学网"),v("OutboundLink")],1)])],1)}),[],!1,null,null,null);v.default=t.exports}}]);