(window.webpackJsonp=window.webpackJsonp||[]).push([[432],{840:function(r,n,v){"use strict";v.r(n);var b=v(2),_=Object(b.a)({},(function(){var r=this,n=r._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[n("Boxx"),r._v(" "),n("p",[n("img",{attrs:{src:"https://www.itxbzxw.com/wp-content/uploads/2024/04/17152908265.png",alt:""}})]),r._v(" "),n("h3",{attrs:{id:"课程目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#课程目录"}},[r._v("#")]),r._v(" 课程目录：")]),r._v(" "),n("p",[r._v("├── 1-课程引言/"),n("br"),r._v("\n│ ├── [ 19M] 1-1 课程导学"),n("br"),r._v("\n│ ├── [9.0M] 1-2 数据中台项目展示及技术栈梳理"),n("br"),r._v("\n│ └── [8.0M] 1-3 学习建议"),n("br"),r._v("\n├── 2-认知数据中台/"),n("br"),r._v("\n│ ├── [ 11M] 2-1 数据中台的应用及发展趋势"),n("br"),r._v("\n│ ├── [6.8M] 2-2 数据中台必备核心能力"),n("br"),r._v("\n│ ├── [6.3M] 2-3 对于数据中台的认知误区"),n("br"),r._v("\n│ └── [9.3M] 2-4 可落地的中台建设经验总结"),n("br"),r._v("\n├── 3-数据中台建设 – 前置理论基础/"),n("br"),r._v("\n│ ├── [2.6M] 3-1 本章介绍"),n("br"),r._v("\n│ ├── [8.3M] 3-2 元数据：构建数据中台的组件"),n("br"),r._v("\n│ ├── [ 17M] 3-3 数据血缘"),n("br"),r._v("\n│ ├── [ 16M] 3-4 理解数据生命周期"),n("br"),r._v("\n│ ├── [ 21M] 3-5 数据安全策略、数据资产管理、组织架构整合"),n("br"),r._v("\n│ ├── [5.6M] 3-6 统一的数据服务体系与数据运营管控"),n("br"),r._v("\n│ └── [3.9M] 3-7 本章总结"),n("br"),r._v("\n├── 4-构建数据模型 – 数据处理的原材料/"),n("br"),r._v("\n│ ├── [3.4M] 4-1 本章介绍"),n("br"),r._v("\n│ ├── [ 16M] 4-2 【需求分析】数据中台项目需求分析"),n("br"),r._v("\n│ ├── [ 14M] 4-3 【项目架构】项目架构深入剖析与技术解决方案讲解"),n("br"),r._v("\n│ ├── [ 26M] 4-4 【数据标准】编写元数据结构 SQL，定义数据使用标准"),n("br"),r._v("\n│ ├── [ 15M] 4-5 【数据采集】编写数据采集 SQL，定义采集原始数据方法"),n("br"),r._v("\n│ ├── [ 14M] 4-6 【数据计算】编写数据计算规则 SQL，定义指标计算逻辑"),n("br"),r._v("\n│ ├── [ 13M] 4-7 【数据存储】编写数据存储规则定义 SQL，定义个性化存储方式"),n("br"),r._v("\n│ ├── [9.0M] 4-8 【组织结构】编写组织结构定义 SQL，赋予数据组织形态"),n("br"),r._v("\n│ ├── [ 13M] 4-9 【业务规则】编写应用业务规则定义 SQL，连通业务与规则"),n("br"),r._v("\n│ ├── [ 15M] 4-10 【环境安装】JDK17安装与IDEA"),n("br"),r._v("\n│ ├── [ 24M] 4-11 【环境安装】Maven安装及配置"),n("br"),r._v("\n│ ├── [ 48M] 4-12 【项目搭建】项目初始化及测试（一）"),n("br"),r._v("\n│ ├── [ 55M] 4-13 【项目搭建】项目初始化及测试（二）"),n("br"),r._v("\n│ ├── [ 43M] 4-14 【模型构建】应用规则充血模型编写，将数据库实体转变成数据模型（一）"),n("br"),r._v("\n│ ├── [ 74M] 4-15 【模型构建】应用规则充血模型编写，将数据库实体转变成数据模型（二）"),n("br"),r._v("\n│ ├── [ 62M] 4-16 【模型构建】应用规则充血模型编写，将数据库实体转变成数据模型（三）"),n("br"),r._v("\n│ ├── [ 66M] 4-17 【模型构建】应用规则充血模型编写，将数据库实体转变成数据模型（四）"),n("br"),r._v("\n│ ├── [ 48M] 4-18 【问题补充】遗留问题解答"),n("br"),r._v("\n│ ├── [5.5M] 4-19 【问题抛出】数据库实体与数据模型映射存在什么问题？"),n("br"),r._v("\n│ ├── [ 60M] 4-20 【基础补充】构建MapStruct示例，深入理解其高性能原理"),n("br"),r._v("\n│ ├── [ 53M] 4-21 【基础补充】定义MapStruct映射器（一）"),n("br"),r._v("\n│ ├── [ 47M] 4-22 【基础补充】定义MapStruct映射器（二）"),n("br"),r._v("\n│ ├── [ 76M] 4-23 【基础补充】MapStruct数据类型转换"),n("br"),r._v("\n│ ├── [ 62M] 4-24 【基础补充】MapStruct映射集合"),n("br"),r._v("\n│ ├── [ 65M] 4-25 【基础补充】MapStruct自定义映射"),n("br"),r._v("\n│ └── [ 39M] 4-26 【解决方案】Spring Boot集成MapStruct，完美解决数据库与数据模型映射问题"),n("br"),r._v("\n├── 5-数据查询之SpringBoot动态多数据源技术 – 数据处理的助推剂/"),n("br"),r._v("\n│ ├── [1.9M] 5-1 本章介绍"),n("br"),r._v("\n│ ├── [ 68M] 5-2 【模型查询】用于承载数据的查询应用规则模型"),n("br"),r._v("\n│ ├── [ 77M] 5-3 【模型查询】用于承载数据的查询应用规则模型"),n("br"),r._v("\n│ ├── [3.3M] 5-4 【问题抛出及解决方案】为何要使用数据源查询？不同规则下的数据源查询问题？"),n("br"),r._v("\n│ ├── [2.2M] 5-5 【基础补充】动态多数据源原理"),n("br"),r._v("\n│ ├── [ 39M] 5-6 【基础补充】手撸原生动态多数据源代码（一）"),n("br"),r._v("\n│ ├── [ 43M] 5-7 【基础补充】手撸原生动态多数据源代码（二）"),n("br"),r._v("\n│ ├── [ 59M] 5-8 【基础补充】Mybatis-Plus实现动态多数据源"),n("br"),r._v("\n│ ├── [ 74M] 5-9 【源码分析与源码实战】源码分析Spring Boot动态多数据源原理与实战"),n("br"),r._v("\n│ ├── [4.3M] 5-10 【组件解析】动态多数据源结构讲解"),n("br"),r._v("\n│ ├── [ 74M] 5-11 【动态配置】动态多数据源配置引入starter机制–创建动态数据源框架（一）"),n("br"),r._v("\n│ ├── [3.9M] 5-12 【动态配置】动态多数据源配置引入starter机制–创建动态数据源框架（二）"),n("br"),r._v("\n│ ├── [ 33M] 5-13 【框架构建】自定义注解实现 Spring Boot动态多数据源–属性配置"),n("br"),r._v("\n│ ├── [ 47M] 5-14 【框架构建】自定义注解实现 Spring Boot动态多数据源–数据源创建（一）"),n("br"),r._v("\n│ ├── [ 36M] 5-15 【框架构建】自定义注解实现 Spring Boot动态多数据源–数据源创建（二）"),n("br"),r._v("\n│ ├── [ 15M] 5-16 【框架构建】自定义注解实现 Spring Boot动态多数据源–数据源加载"),n("br"),r._v("\n│ ├── [ 59M] 5-17 【框架构建】自定义注解实现Spring Boot动态多数据源"),n("br"),r._v("\n│ ├── [ 59M] 5-18 【框架构建】自定义注解实现Spring Boot动态多数据源–通知与增强"),n("br"),r._v("\n│ ├── [ 69M] 5-19 【框架构建】自定义注解实现Spring Boot动态多数据源–查找当前类及接口方法注解"),n("br"),r._v("\n│ ├── [ 71M] 5-20 【框架构建】自定义注解实现Spring Boot动态多数据源–自动装配"),n("br"),r._v("\n│ ├── [ 85M] 5-21 【框架构建】自定义注解实现Spring Boot动态多数据源–整合多数据源组件测试"),n("br"),r._v("\n│ ├── [ 36M] 5-22 【问题抛出】多数据源事务下事务失效问题？"),n("br"),r._v("\n│ ├── [ 40M] 5-23 【解决方案】源码深度适配解决多数据源事务问题（一）"),n("br"),r._v("\n│ ├── [ 52M] 5-24 【解决方案】源码深度适配解决多数据源事务问题（二）"),n("br"),r._v("\n│ └── [ 36M] 5-25 【单元测试】多数据集成单元测试"),n("br"),r._v("\n├── 6-分布式调度之ElasticJob – 数据处理的方向盘/"),n("br"),r._v("\n│ ├── [1.9M] 6-1 本章介绍"),n("br"),r._v("\n│ ├── [ 16M] 6-2 【环境准备】介绍用户中心服务"),n("br"),r._v("\n│ ├── [ 34M] 6-3 【环境安装】Zookeeper安装及简单测试使用"),n("br"),r._v("\n│ ├── [ 37M] 6-4 【解决方案】Spring boot 集成 Dubbo完成分布式调用"),n("br"),r._v("\n│ ├── [ 38M] 6-5 【组织构建】组装组织结构数据：从组织层面依次进行数据处理（一）"),n("br"),r._v("\n│ ├── [ 66M] 6-6 【组织构建】组装组织结构数据：从组织层面依次进行数据处理（二）"),n("br"),r._v("\n│ ├── [ 54M] 6-7 【组织构建】组装组织结构数据：从组织层面依次进行数据处理（三）"),n("br"),r._v("\n│ ├── [ 71M] 6-8 【参数组装】组装维度及时间数据：准备数据处理的参数"),n("br"),r._v("\n│ ├── [ 90M] 6-9 【异步调用】引入异步能力 Spring Boot async 优化数据处理"),n("br"),r._v("\n│ ├── [3.8M] 6-10 【数据调度】分布式调度组件 ElasticJob 概述"),n("br"),r._v("\n│ ├── [6.2M] 6-11 【基础补充】ElasticJob 技术架构解析"),n("br"),r._v("\n│ ├── [ 54M] 6-12 【基础补充】ElasticJob 作业分片调度开发"),n("br"),r._v("\n│ ├── [ 49M] 6-13 【案例实现】Spring Boot集成 ElasticJob 案例实现（一）"),n("br"),r._v("\n│ ├── [ 56M] 6-14 【案例实现】Spring Boot集成 ElasticJob 案例实现（二）"),n("br"),r._v("\n│ ├── [ 75M] 6-15 【案例实现】Spring Boot集成 ElasticJob 案例实现（三）"),n("br"),r._v("\n│ ├── [ 46M] 6-16 【解决方案】Spring Boot集成 ElasticJob 进行数据处理调度（一）"),n("br"),r._v("\n│ ├── [ 72M] 6-17 【解决方案】Spring Boot集成 ElasticJob 进行数据处理调度（二）"),n("br"),r._v("\n│ └── [1.8M] 6-18 本章总结"),n("br"),r._v("\n├── 7-数据采集 – 数据处理的发动机/"),n("br"),r._v("\n│ ├── 【认准一手完整 www.ukoou.com】"),n("br"),r._v("\n│ ├── [2.3M] 7-1 本章介绍"),n("br"),r._v("\n│ ├── [ 31M] 7-2 【数据校验】数据校验处理：统一拦截不符合计算标准的数据（一）"),n("br"),r._v("\n│ ├── [ 43M] 7-3 【数据校验】数据校验处理：统一拦截不符合计算标准的数据（二）"),n("br"),r._v("\n│ ├── [ 56M] 7-4 【模板构建】构建数据采集器模板"),n("br"),r._v("\n│ ├── [ 41M] 7-5 【参数组装】组装基础维度查询 SQL 参数（一）"),n("br"),r._v("\n│ ├── [ 47M] 7-6 【参数组装】组装基础维度查询 SQL 参数（二）"),n("br"),r._v("\n│ ├── [ 37M] 7-7 【SQL组装】构建基础维度查询 SQL 能力"),n("br"),r._v("\n│ ├── [ 17M] 7-8 【结果合并】合并指标查询结果"),n("br"),r._v("\n│ ├── [ 23M] 7-9 【异常处理】处理异常或者无意义指标数据值"),n("br"),r._v("\n│ ├── [ 16M] 7-10 【参数组装】组装高维度查询 SQL 参数"),n("br"),r._v("\n│ ├── [ 40M] 7-11 【SQL组装】处理高维度查询 SQL 能力（一）"),n("br"),r._v("\n│ ├── [ 57M] 7-12 【SQL组装】处理高维度查询 SQL 能力（二）"),n("br"),r._v("\n│ ├── [ 21M] 7-13 【结果合并】高维度数据指标结果合并"),n("br"),r._v("\n│ ├── [ 47M] 7-14 【单元测试】采集集成单元测试"),n("br"),r._v("\n│ └── [1.7M] 7-15 本章总结"),n("br"),r._v("\n├── 8-Google Aviator表达式引擎助力数据运算 – 数据处理的第二把火/"),n("br"),r._v("\n│ ├── [1.1M] 8-1 本章介绍"),n("br"),r._v("\n│ ├── [1.6M] 8-2 【问题抛出】数据表达式运算面临的问题？"),n("br"),r._v("\n│ ├── [2.5M] 8-3 【解决方案】数据运算问题解决方案：Aviator表达式引擎概述"),n("br"),r._v("\n│ ├── [ 34M] 8-4 【基础补充】Google Aviator 引擎常用操作符（一）"),n("br"),r._v("\n│ ├── [ 35M] 8-5 【基础补充】Google Aviator 引擎常用操作符（二）"),n("br"),r._v("\n│ ├── [ 32M] 8-6 【基础补充】Google Aviator 内置函数（一）"),n("br"),r._v("\n│ ├── [ 34M] 8-7 【基础补充】Google Aviator 内置函数（二）"),n("br"),r._v("\n│ ├── [ 55M] 8-8 【基础补充】Google Aviator 自定义函数"),n("br"),r._v("\n│ ├── [ 45M] 8-9 【基础补充】Google Aviator 表达式引擎实战"),n("br"),r._v("\n│ ├── [ 56M] 8-10 【指标计算】数据指标表达式计算逻辑与实现（一）"),n("br"),r._v("\n│ ├── [ 54M] 8-11 【指标计算】数据指标表达式计算逻辑与实现（二）"),n("br"),r._v("\n│ ├── [ 33M] 8-12 【模板构建】构建数据存储器模板"),n("br"),r._v("\n│ ├── [ 43M] 8-13 【指标存储】数据指标存储业务处理"),n("br"),r._v("\n│ ├── [ 26M] 8-14 【单元测试】表达式引擎及存储器集成单元测试"),n("br"),r._v("\n│ └── [1.5M] 8-15 本章总结"),n("br"),r._v("\n├── 9-RocketMq助力数据维度升级计算 – 数据处理的最后一把火/"),n("br"),r._v("\n│ ├── [2.1M] 9-1 本章介绍"),n("br"),r._v("\n│ ├── [3.2M] 9-2 【问题抛出】低维时间、低维空间如何向高维时间、高维空间升级计算？"),n("br"),r._v("\n│ ├── [ 65M] 9-3 【模板构建】构建维度事件升级模板"),n("br"),r._v("\n│ ├── [7.2M] 9-4 【解决方案】维度升级解决方案：消息中间件 RocketMq 概述"),n("br"),r._v("\n│ ├── [4.6M] 9-5 【架构剖析】RocketMq 架构剖析"),n("br"),r._v("\n│ ├── [ 51M] 9-6 【环境安装】RocketMq环境安装及简单测试"),n("br"),r._v("\n│ ├── [ 94M] 9-7 【案例实现】Spring Boot集成 RocketMq 案例实现"),n("br"),r._v("\n│ ├── [ 53M] 9-8 【基础补充】RocketMq 解决消费重复问题"),n("br"),r._v("\n│ ├── [ 45M] 9-9 【基础补充】RocketMq 解决消费事务问题（一）"),n("br"),r._v("\n│ ├── [ 45M] 9-10 【基础补充】RocketMq 解决消费事务问题（二）"),n("br"),r._v("\n│ ├── [ 53M] 9-11 【消息发送】构建 MQ 消息升级维度数据处理"),n("br"),r._v("\n│ ├── [ 33M] 9-12 【消息接收】RocketMq 消息接收器编码及参数封装"),n("br"),r._v("\n│ ├── [ 58M] 9-13 【维度升级】组装升级时间维度、空间维度参数"),n("br"),r._v("\n│ ├── [ 33M] 9-14 【单元测试】维度升级消息集成单元测试"),n("br"),r._v("\n│ └── [2.9M] 9-15 本章总结"),n("br"),r._v("\n├── 10-项目大成及中台展望 – 数据处理的终点站/"),n("br"),r._v("\n│ ├── [8.0M] 10-1 本章介绍"),n("br"),r._v("\n│ ├── [ 10M] 10-2 【环境准备】考勤业务表结构及数据介绍"),n("br"),r._v("\n│ ├── [ 98M] 10-3 【接口编写】编写生成业务规则的接口（一）"),n("br"),r._v("\n│ ├── [118M] 10-4 【接口编写】编写生成业务规则的接口（二）"),n("br"),r._v("\n│ ├── [ 83M] 10-5 【接口测试】业务规则接口测试"),n("br"),r._v("\n│ ├── [ 50M] 10-6 【SQL校验】引入 SQL 校验能力"),n("br"),r._v("\n│ ├── [ 60M] 10-7 【中台赋能】使用数据中台快速对考勤业务赋能"),n("br"),r._v("\n│ ├── [ 65M] 10-8 【口径统一】提供统一标准的对外 api 之指标计算结果"),n("br"),r._v("\n│ ├── [ 15M] 10-9 【资产统一】提供统一标准的对外 api 之元数据资产目录"),n("br"),r._v("\n│ ├── [ 17M] 10-10 【项目总结】项目演示及流程梳理总结"),n("br"),r._v("\n│ ├── [6.1M] 10-11 【拓展思考】跨业务数据指标的联合运算拓展与思考"),n("br"),r._v("\n│ ├── [7.3M] 10-12 【拓展思考】数据中台权限设计思考"),n("br"),r._v("\n│ └── [3.0M] 10-13 本章总结"),n("br"),r._v("\n└── 资料代码/")]),r._v(" "),n("h2",{attrs:{id:"下载地址"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[r._v("#")]),r._v(" 下载地址：")]),r._v(" "),n("p",[n("a",{attrs:{href:"https://www.itxbzxw.com/learn/hdkf/java/9570.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("慕课网-SpringBoot3.0 + RocketMq 构建企业级数据中台-小白自学网"),n("OutboundLink")],1)])],1)}),[],!1,null,null,null);n.default=_.exports}}]);